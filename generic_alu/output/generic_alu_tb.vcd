$date
  Wed Jul 03 16:28:15 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module generic_alu_tb $end
$var reg 8 ! data_in_1_tst[7:0] $end
$var reg 8 " data_in_2_tst[7:0] $end
$var reg 1 # op_ula_tst $end
$var reg 8 $ data_out_tst[7:0] $end
$var reg 1 % zf_tst $end
$var reg 1 & gz_tst $end
$scope module alu_inst $end
$var reg 8 ' data_in_1[7:0] $end
$var reg 8 ( data_in_2[7:0] $end
$var reg 1 ) op_ula $end
$var reg 8 * data_out[7:0] $end
$var reg 1 + zf $end
$var reg 1 , gz $end
$var reg 8 - result[7:0] $end
$var reg 1 . zero_flag $end
$var reg 1 / greater_than_zero_flag $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00001010 !
b00000101 "
0#
b00001111 $
0%
1&
b00001010 '
b00000101 (
0)
b00001111 *
0+
1,
b00001111 -
0.
1/
#100000000
1#
b00000101 $
1)
b00000101 *
b00000101 -
#200000000
b11111111 !
b00000001 "
0#
b00000000 $
1%
0&
b11111111 '
b00000001 (
0)
b00000000 *
1+
0,
b00000000 -
1.
0/
#300000000
b00000000 !
1#
b11111111 $
0%
b00000000 '
1)
b11111111 *
0+
b11111111 -
0.
#400000000
b00010010 !
b00110100 "
0#
b01000110 $
1&
b00010010 '
b00110100 (
0)
b01000110 *
1,
b01000110 -
1/
#500000000
b00110100 !
b00010010 "
1#
b00100010 $
b00110100 '
b00010010 (
1)
b00100010 *
b00100010 -
#600000000
