$date
  Sat Jun 22 20:30:38 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module full_adder_4bit_tb $end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 1 # carry_in $end
$var reg 4 $ sum[3:0] $end
$var reg 1 % carry_out $end
$scope module x $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 1 ( carry_in $end
$var reg 4 ) sum[3:0] $end
$var reg 1 * carry_out $end
$var reg 1 + c1 $end
$var reg 1 , c2 $end
$var reg 1 - c3 $end
$scope module fa0 $end
$var reg 1 . a $end
$var reg 1 / b $end
$var reg 1 0 carry_in $end
$var reg 1 1 sum $end
$var reg 1 2 carry_out $end
$var reg 1 3 x $end
$var reg 1 4 y $end
$var reg 1 5 z $end
$scope module half_adder_1 $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 sum $end
$var reg 1 9 carry $end
$upscope $end
$scope module half_adder_2 $end
$var reg 1 : a $end
$var reg 1 ; b $end
$var reg 1 < sum $end
$var reg 1 = carry $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var reg 1 > a $end
$var reg 1 ? b $end
$var reg 1 @ carry_in $end
$var reg 1 A sum $end
$var reg 1 B carry_out $end
$var reg 1 C x $end
$var reg 1 D y $end
$var reg 1 E z $end
$scope module half_adder_1 $end
$var reg 1 F a $end
$var reg 1 G b $end
$var reg 1 H sum $end
$var reg 1 I carry $end
$upscope $end
$scope module half_adder_2 $end
$var reg 1 J a $end
$var reg 1 K b $end
$var reg 1 L sum $end
$var reg 1 M carry $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var reg 1 N a $end
$var reg 1 O b $end
$var reg 1 P carry_in $end
$var reg 1 Q sum $end
$var reg 1 R carry_out $end
$var reg 1 S x $end
$var reg 1 T y $end
$var reg 1 U z $end
$scope module half_adder_1 $end
$var reg 1 V a $end
$var reg 1 W b $end
$var reg 1 X sum $end
$var reg 1 Y carry $end
$upscope $end
$scope module half_adder_2 $end
$var reg 1 Z a $end
$var reg 1 [ b $end
$var reg 1 \ sum $end
$var reg 1 ] carry $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var reg 1 ^ a $end
$var reg 1 _ b $end
$var reg 1 ` carry_in $end
$var reg 1 a sum $end
$var reg 1 b carry_out $end
$var reg 1 c x $end
$var reg 1 d y $end
$var reg 1 e z $end
$scope module half_adder_1 $end
$var reg 1 f a $end
$var reg 1 g b $end
$var reg 1 h sum $end
$var reg 1 i carry $end
$upscope $end
$scope module half_adder_2 $end
$var reg 1 j a $end
$var reg 1 k b $end
$var reg 1 l sum $end
$var reg 1 m carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0001 !
b0010 "
0#
b0011 $
0%
b0001 &
b0010 '
0(
b0011 )
0*
0+
0,
0-
1.
0/
00
11
02
13
04
05
16
07
18
09
1:
0;
1<
0=
0>
1?
0@
1A
0B
1C
0D
0E
0F
1G
1H
0I
1J
0K
1L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
#1000000
1#
b0100 $
1(
b0100 )
1+
1,
10
01
12
15
1;
0<
1=
1@
0A
1B
1E
1K
0L
1M
1P
1Q
1[
1\
#2000000
b0111 !
b1000 "
0#
b1111 $
0%
b0111 &
b1000 '
0(
b1111 )
0*
0+
0,
0-
00
11
02
05
0;
1<
0=
1>
0?
0@
1A
0B
0E
1F
0G
0K
1L
0M
1N
0P
1Q
0R
1S
0U
1V
1X
1Z
0[
1\
0]
1_
0`
1a
0b
1c
0e
1g
1h
1j
0k
1l
0m
#3000000
1#
b0000 $
1%
1(
b0000 )
1*
1+
1,
1-
10
01
12
15
1;
0<
1=
1@
0A
1B
1E
1K
0L
1M
1P
0Q
1R
1U
1[
0\
1]
1`
0a
1b
1e
1k
0l
1m
#4000000
